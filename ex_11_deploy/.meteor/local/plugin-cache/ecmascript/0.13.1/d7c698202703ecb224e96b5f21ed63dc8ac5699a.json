{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/gbox3d/Desktop/work/myproject/meteor_study/ex_11/packages/webapp/webapp_server.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx",["flow",{}],"nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}]],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"packages/webapp/webapp_server.js","filename":"/Users/gbox3d/Desktop/work/myproject/meteor_study/ex_11/packages/webapp/webapp_server.js","passPerPreset":false,"envName":"development","cwd":"/Users/gbox3d/Desktop/work/myproject/meteor_study/ex_11","root":"/Users/gbox3d/Desktop/work/myproject/meteor_study/ex_11","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.7.4","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/gbox3d/Desktop/work/myproject/meteor_study/ex_11/packages/webapp/webapp_server.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/webapp/webapp_server.js"}},"code":"!function (module1) {\n  let _objectSpread;\n\n  module1.link(\"@babel/runtime/helpers/objectSpread2\", {\n    default(v) {\n      _objectSpread = v;\n    }\n\n  }, 0);\n  module1.export({\n    WebApp: () => WebApp,\n    WebAppInternals: () => WebAppInternals\n  });\n  let assert;\n  module1.link(\"assert\", {\n    default(v) {\n      assert = v;\n    }\n\n  }, 0);\n  let readFileSync;\n  module1.link(\"fs\", {\n    readFileSync(v) {\n      readFileSync = v;\n    }\n\n  }, 1);\n  let createServer;\n  module1.link(\"http\", {\n    createServer(v) {\n      createServer = v;\n    }\n\n  }, 2);\n  let pathJoin, pathDirname;\n  module1.link(\"path\", {\n    join(v) {\n      pathJoin = v;\n    },\n\n    dirname(v) {\n      pathDirname = v;\n    }\n\n  }, 3);\n  let parseUrl;\n  module1.link(\"url\", {\n    parse(v) {\n      parseUrl = v;\n    }\n\n  }, 4);\n  let createHash;\n  module1.link(\"crypto\", {\n    createHash(v) {\n      createHash = v;\n    }\n\n  }, 5);\n  let connect;\n  module1.link(\"./connect.js\", {\n    connect(v) {\n      connect = v;\n    }\n\n  }, 6);\n  let compress;\n  module1.link(\"compression\", {\n    default(v) {\n      compress = v;\n    }\n\n  }, 7);\n  let cookieParser;\n  module1.link(\"cookie-parser\", {\n    default(v) {\n      cookieParser = v;\n    }\n\n  }, 8);\n  let qs;\n  module1.link(\"qs\", {\n    default(v) {\n      qs = v;\n    }\n\n  }, 9);\n  let parseRequest;\n  module1.link(\"parseurl\", {\n    default(v) {\n      parseRequest = v;\n    }\n\n  }, 10);\n  let basicAuth;\n  module1.link(\"basic-auth-connect\", {\n    default(v) {\n      basicAuth = v;\n    }\n\n  }, 11);\n  let lookupUserAgent;\n  module1.link(\"useragent\", {\n    lookup(v) {\n      lookupUserAgent = v;\n    }\n\n  }, 12);\n  let isModern;\n  module1.link(\"meteor/modern-browsers\", {\n    isModern(v) {\n      isModern = v;\n    }\n\n  }, 13);\n  let send;\n  module1.link(\"send\", {\n    default(v) {\n      send = v;\n    }\n\n  }, 14);\n  let removeExistingSocketFile, registerSocketFileCleanup;\n  module1.link(\"./socket_file.js\", {\n    removeExistingSocketFile(v) {\n      removeExistingSocketFile = v;\n    },\n\n    registerSocketFileCleanup(v) {\n      registerSocketFileCleanup = v;\n    }\n\n  }, 15);\n  let onMessage;\n  module1.link(\"meteor/inter-process-messaging\", {\n    onMessage(v) {\n      onMessage = v;\n    }\n\n  }, 16);\n  var SHORT_SOCKET_TIMEOUT = 5 * 1000;\n  var LONG_SOCKET_TIMEOUT = 120 * 1000;\n  const WebApp = {};\n  const WebAppInternals = {};\n  const hasOwn = Object.prototype.hasOwnProperty; // backwards compat to 2.0 of connect\n\n  connect.basicAuth = basicAuth;\n  WebAppInternals.NpmModules = {\n    connect: {\n      version: Npm.require('connect/package.json').version,\n      module: connect\n    }\n  }; // Though we might prefer to use web.browser (modern) as the default\n  // architecture, safety requires a more compatible defaultArch.\n\n  WebApp.defaultArch = 'web.browser.legacy'; // XXX maps archs to manifests\n\n  WebApp.clientPrograms = {}; // XXX maps archs to program path on filesystem\n\n  var archPath = {};\n\n  var bundledJsCssUrlRewriteHook = function (url) {\n    var bundledPrefix = __meteor_runtime_config__.ROOT_URL_PATH_PREFIX || '';\n    return bundledPrefix + url;\n  };\n\n  var sha1 = function (contents) {\n    var hash = createHash('sha1');\n    hash.update(contents);\n    return hash.digest('hex');\n  };\n\n  function shouldCompress(req, res) {\n    if (req.headers['x-no-compression']) {\n      // don't compress responses with this request header\n      return false;\n    } // fallback to standard filter function\n\n\n    return compress.filter(req, res);\n  }\n\n  ; // #BrowserIdentification\n  //\n  // We have multiple places that want to identify the browser: the\n  // unsupported browser page, the appcache package, and, eventually\n  // delivering browser polyfills only as needed.\n  //\n  // To avoid detecting the browser in multiple places ad-hoc, we create a\n  // Meteor \"browser\" object. It uses but does not expose the npm\n  // useragent module (we could choose a different mechanism to identify\n  // the browser in the future if we wanted to).  The browser object\n  // contains\n  //\n  // * `name`: the name of the browser in camel case\n  // * `major`, `minor`, `patch`: integers describing the browser version\n  //\n  // Also here is an early version of a Meteor `request` object, intended\n  // to be a high-level description of the request without exposing\n  // details of connect's low-level `req`.  Currently it contains:\n  //\n  // * `browser`: browser identification object described above\n  // * `url`: parsed url, including parsed query params\n  //\n  // As a temporary hack there is a `categorizeRequest` function on WebApp which\n  // converts a connect `req` to a Meteor `request`. This can go away once smart\n  // packages such as appcache are being passed a `request` object directly when\n  // they serve content.\n  //\n  // This allows `request` to be used uniformly: it is passed to the html\n  // attributes hook, and the appcache package can use it when deciding\n  // whether to generate a 404 for the manifest.\n  //\n  // Real routing / server side rendering will probably refactor this\n  // heavily.\n  // e.g. \"Mobile Safari\" => \"mobileSafari\"\n\n  var camelCase = function (name) {\n    var parts = name.split(' ');\n    parts[0] = parts[0].toLowerCase();\n\n    for (var i = 1; i < parts.length; ++i) {\n      parts[i] = parts[i].charAt(0).toUpperCase() + parts[i].substr(1);\n    }\n\n    return parts.join('');\n  };\n\n  var identifyBrowser = function (userAgentString) {\n    var userAgent = lookupUserAgent(userAgentString);\n    return {\n      name: camelCase(userAgent.family),\n      major: +userAgent.major,\n      minor: +userAgent.minor,\n      patch: +userAgent.patch\n    };\n  }; // XXX Refactor as part of implementing real routing.\n\n\n  WebAppInternals.identifyBrowser = identifyBrowser;\n\n  WebApp.categorizeRequest = function (req) {\n    return _.extend({\n      browser: identifyBrowser(req.headers['user-agent']),\n      url: parseUrl(req.url, true)\n    }, _.pick(req, 'dynamicHead', 'dynamicBody', 'headers', 'cookies'));\n  }; // HTML attribute hooks: functions to be called to determine any attributes to\n  // be added to the '<html>' tag. Each function is passed a 'request' object (see\n  // #BrowserIdentification) and should return null or object.\n\n\n  var htmlAttributeHooks = [];\n\n  var getHtmlAttributes = function (request) {\n    var combinedAttributes = {};\n\n    _.each(htmlAttributeHooks || [], function (hook) {\n      var attributes = hook(request);\n      if (attributes === null) return;\n      if (typeof attributes !== 'object') throw Error(\"HTML attribute hook must return null or object\");\n\n      _.extend(combinedAttributes, attributes);\n    });\n\n    return combinedAttributes;\n  };\n\n  WebApp.addHtmlAttributeHook = function (hook) {\n    htmlAttributeHooks.push(hook);\n  }; // Serve app HTML for this URL?\n\n\n  var appUrl = function (url) {\n    if (url === '/favicon.ico' || url === '/robots.txt') return false; // NOTE: app.manifest is not a web standard like favicon.ico and\n    // robots.txt. It is a file name we have chosen to use for HTML5\n    // appcache URLs. It is included here to prevent using an appcache\n    // then removing it from poisoning an app permanently. Eventually,\n    // once we have server side routing, this won't be needed as\n    // unknown URLs with return a 404 automatically.\n\n    if (url === '/app.manifest') return false; // Avoid serving app HTML for declared routes such as /sockjs/.\n\n    if (RoutePolicy.classify(url)) return false; // we currently return app HTML on all URLs by default\n\n    return true;\n  }; // We need to calculate the client hash after all packages have loaded\n  // to give them a chance to populate __meteor_runtime_config__.\n  //\n  // Calculating the hash during startup means that packages can only\n  // populate __meteor_runtime_config__ during load, not during startup.\n  //\n  // Calculating instead it at the beginning of main after all startup\n  // hooks had run would allow packages to also populate\n  // __meteor_runtime_config__ during startup, but that's too late for\n  // autoupdate because it needs to have the client hash at startup to\n  // insert the auto update version itself into\n  // __meteor_runtime_config__ to get it to the client.\n  //\n  // An alternative would be to give autoupdate a \"post-start,\n  // pre-listen\" hook to allow it to insert the auto update version at\n  // the right moment.\n\n\n  Meteor.startup(function () {\n    function getter(key) {\n      return function (arch) {\n        arch = arch || WebApp.defaultArch;\n        const program = WebApp.clientPrograms[arch];\n        const value = program && program[key]; // If this is the first time we have calculated this hash,\n        // program[key] will be a thunk (lazy function with no parameters)\n        // that we should call to do the actual computation.\n\n        return typeof value === \"function\" ? program[key] = value() : value;\n      };\n    }\n\n    WebApp.calculateClientHash = WebApp.clientHash = getter(\"version\");\n    WebApp.calculateClientHashRefreshable = getter(\"versionRefreshable\");\n    WebApp.calculateClientHashNonRefreshable = getter(\"versionNonRefreshable\");\n    WebApp.getRefreshableAssets = getter(\"refreshableAssets\");\n  }); // When we have a request pending, we want the socket timeout to be long, to\n  // give ourselves a while to serve it, and to allow sockjs long polls to\n  // complete.  On the other hand, we want to close idle sockets relatively\n  // quickly, so that we can shut down relatively promptly but cleanly, without\n  // cutting off anyone's response.\n\n  WebApp._timeoutAdjustmentRequestCallback = function (req, res) {\n    // this is really just req.socket.setTimeout(LONG_SOCKET_TIMEOUT);\n    req.setTimeout(LONG_SOCKET_TIMEOUT); // Insert our new finish listener to run BEFORE the existing one which removes\n    // the response from the socket.\n\n    var finishListeners = res.listeners('finish'); // XXX Apparently in Node 0.12 this event was called 'prefinish'.\n    // https://github.com/joyent/node/commit/7c9b6070\n    // But it has switched back to 'finish' in Node v4:\n    // https://github.com/nodejs/node/pull/1411\n\n    res.removeAllListeners('finish');\n    res.on('finish', function () {\n      res.setTimeout(SHORT_SOCKET_TIMEOUT);\n    });\n\n    _.each(finishListeners, function (l) {\n      res.on('finish', l);\n    });\n  }; // Will be updated by main before we listen.\n  // Map from client arch to boilerplate object.\n  // Boilerplate object has:\n  //   - func: XXX\n  //   - baseData: XXX\n\n\n  var boilerplateByArch = {}; // Register a callback function that can selectively modify boilerplate\n  // data given arguments (request, data, arch). The key should be a unique\n  // identifier, to prevent accumulating duplicate callbacks from the same\n  // call site over time. Callbacks will be called in the order they were\n  // registered. A callback should return false if it did not make any\n  // changes affecting the boilerplate. Passing null deletes the callback.\n  // Any previous callback registered for this key will be returned.\n\n  const boilerplateDataCallbacks = Object.create(null);\n\n  WebAppInternals.registerBoilerplateDataCallback = function (key, callback) {\n    const previousCallback = boilerplateDataCallbacks[key];\n\n    if (typeof callback === \"function\") {\n      boilerplateDataCallbacks[key] = callback;\n    } else {\n      assert.strictEqual(callback, null);\n      delete boilerplateDataCallbacks[key];\n    } // Return the previous callback in case the new callback needs to call\n    // it; for example, when the new callback is a wrapper for the old.\n\n\n    return previousCallback || null;\n  }; // Given a request (as returned from `categorizeRequest`), return the\n  // boilerplate HTML to serve for that request.\n  //\n  // If a previous connect middleware has rendered content for the head or body,\n  // returns the boilerplate with that content patched in otherwise\n  // memoizes on HTML attributes (used by, eg, appcache) and whether inline\n  // scripts are currently allowed.\n  // XXX so far this function is always called with arch === 'web.browser'\n\n\n  function getBoilerplate(request, arch) {\n    return getBoilerplateAsync(request, arch).await();\n  }\n\n  function getBoilerplateAsync(request, arch) {\n    const boilerplate = boilerplateByArch[arch];\n    const data = Object.assign({}, boilerplate.baseData, {\n      htmlAttributes: getHtmlAttributes(request)\n    }, _.pick(request, \"dynamicHead\", \"dynamicBody\"));\n    let madeChanges = false;\n    let promise = Promise.resolve();\n    Object.keys(boilerplateDataCallbacks).forEach(key => {\n      promise = promise.then(() => {\n        const callback = boilerplateDataCallbacks[key];\n        return callback(request, data, arch);\n      }).then(result => {\n        // Callbacks should return false if they did not make any changes.\n        if (result !== false) {\n          madeChanges = true;\n        }\n      });\n    });\n    return promise.then(() => ({\n      stream: boilerplate.toHTMLStream(data),\n      statusCode: data.statusCode,\n      headers: data.headers\n    }));\n  }\n\n  WebAppInternals.generateBoilerplateInstance = function (arch, manifest, additionalOptions) {\n    additionalOptions = additionalOptions || {};\n\n    var runtimeConfig = _.extend(_.clone(__meteor_runtime_config__), additionalOptions.runtimeConfigOverrides || {});\n\n    return new Boilerplate(arch, manifest, _.extend({\n      pathMapper(itemPath) {\n        return pathJoin(archPath[arch], itemPath);\n      },\n\n      baseDataExtension: {\n        additionalStaticJs: _.map(additionalStaticJs || [], function (contents, pathname) {\n          return {\n            pathname: pathname,\n            contents: contents\n          };\n        }),\n        // Convert to a JSON string, then get rid of most weird characters, then\n        // wrap in double quotes. (The outermost JSON.stringify really ought to\n        // just be \"wrap in double quotes\" but we use it to be safe.) This might\n        // end up inside a <script> tag so we need to be careful to not include\n        // \"</script>\", but normal {{spacebars}} escaping escapes too much! See\n        // https://github.com/meteor/meteor/issues/3730\n        meteorRuntimeConfig: JSON.stringify(encodeURIComponent(JSON.stringify(runtimeConfig))),\n        rootUrlPathPrefix: __meteor_runtime_config__.ROOT_URL_PATH_PREFIX || '',\n        bundledJsCssUrlRewriteHook: bundledJsCssUrlRewriteHook,\n        sriMode: sriMode,\n        inlineScriptsAllowed: WebAppInternals.inlineScriptsAllowed(),\n        inline: additionalOptions.inline\n      }\n    }, additionalOptions));\n  }; // A mapping from url path to architecture (e.g. \"web.browser\") to static\n  // file information with the following fields:\n  // - type: the type of file to be served\n  // - cacheable: optionally, whether the file should be cached or not\n  // - sourceMapUrl: optionally, the url of the source map\n  //\n  // Info also contains one of the following:\n  // - content: the stringified content that should be served at this path\n  // - absolutePath: the absolute path on disk to the file\n  // Serve static files from the manifest or added with\n  // `addStaticJs`. Exported for tests.\n\n\n  WebAppInternals.staticFilesMiddleware = function (staticFilesByArch, req, res, next) {\n    return Promise.asyncApply(() => {\n      if ('GET' != req.method && 'HEAD' != req.method && 'OPTIONS' != req.method) {\n        next();\n        return;\n      }\n\n      var pathname = parseRequest(req).pathname;\n\n      try {\n        pathname = decodeURIComponent(pathname);\n      } catch (e) {\n        next();\n        return;\n      }\n\n      var serveStaticJs = function (s) {\n        res.writeHead(200, {\n          'Content-type': 'application/javascript; charset=UTF-8'\n        });\n        res.write(s);\n        res.end();\n      };\n\n      if (_.has(additionalStaticJs, pathname) && !WebAppInternals.inlineScriptsAllowed()) {\n        serveStaticJs(additionalStaticJs[pathname]);\n        return;\n      }\n\n      const {\n        arch,\n        path\n      } = getArchAndPath(pathname, identifyBrowser(req.headers[\"user-agent\"])); // If pauseClient(arch) has been called, program.paused will be a\n      // Promise that will be resolved when the program is unpaused.\n\n      const program = WebApp.clientPrograms[arch];\n      Promise.await(program.paused);\n\n      if (path === \"/meteor_runtime_config.js\" && !WebAppInternals.inlineScriptsAllowed()) {\n        serveStaticJs(\"__meteor_runtime_config__ = \".concat(program.meteorRuntimeConfig, \";\"));\n        return;\n      }\n\n      const info = getStaticFileInfo(staticFilesByArch, pathname, path, arch);\n\n      if (!info) {\n        next();\n        return;\n      } // We don't need to call pause because, unlike 'static', once we call into\n      // 'send' and yield to the event loop, we never call another handler with\n      // 'next'.\n      // Cacheable files are files that should never change. Typically\n      // named by their hash (eg meteor bundled js and css files).\n      // We cache them ~forever (1yr).\n\n\n      const maxAge = info.cacheable ? 1000 * 60 * 60 * 24 * 365 : 0;\n\n      if (info.cacheable) {\n        // Since we use req.headers[\"user-agent\"] to determine whether the\n        // client should receive modern or legacy resources, tell the client\n        // to invalidate cached resources when/if its user agent string\n        // changes in the future.\n        res.setHeader(\"Vary\", \"User-Agent\");\n      } // Set the X-SourceMap header, which current Chrome, FireFox, and Safari\n      // understand.  (The SourceMap header is slightly more spec-correct but FF\n      // doesn't understand it.)\n      //\n      // You may also need to enable source maps in Chrome: open dev tools, click\n      // the gear in the bottom right corner, and select \"enable source maps\".\n\n\n      if (info.sourceMapUrl) {\n        res.setHeader('X-SourceMap', __meteor_runtime_config__.ROOT_URL_PATH_PREFIX + info.sourceMapUrl);\n      }\n\n      if (info.type === \"js\" || info.type === \"dynamic js\") {\n        res.setHeader(\"Content-Type\", \"application/javascript; charset=UTF-8\");\n      } else if (info.type === \"css\") {\n        res.setHeader(\"Content-Type\", \"text/css; charset=UTF-8\");\n      } else if (info.type === \"json\") {\n        res.setHeader(\"Content-Type\", \"application/json; charset=UTF-8\");\n      }\n\n      if (info.hash) {\n        res.setHeader('ETag', '\"' + info.hash + '\"');\n      }\n\n      if (info.content) {\n        res.write(info.content);\n        res.end();\n      } else {\n        send(req, info.absolutePath, {\n          maxage: maxAge,\n          dotfiles: 'allow',\n          // if we specified a dotfile in the manifest, serve it\n          lastModified: false // don't set last-modified based on the file date\n\n        }).on('error', function (err) {\n          Log.error(\"Error serving static file \" + err);\n          res.writeHead(500);\n          res.end();\n        }).on('directory', function () {\n          Log.error(\"Unexpected directory \" + info.absolutePath);\n          res.writeHead(500);\n          res.end();\n        }).pipe(res);\n      }\n    });\n  };\n\n  function getStaticFileInfo(staticFilesByArch, originalPath, path, arch) {\n    if (!hasOwn.call(WebApp.clientPrograms, arch)) {\n      return null;\n    } // Get a list of all available static file architectures, with arch\n    // first in the list if it exists.\n\n\n    const staticArchList = Object.keys(staticFilesByArch);\n    const archIndex = staticArchList.indexOf(arch);\n\n    if (archIndex > 0) {\n      staticArchList.unshift(staticArchList.splice(archIndex, 1)[0]);\n    }\n\n    let info = null;\n    staticArchList.some(arch => {\n      const staticFiles = staticFilesByArch[arch];\n\n      function finalize(path) {\n        info = staticFiles[path]; // Sometimes we register a lazy function instead of actual data in\n        // the staticFiles manifest.\n\n        if (typeof info === \"function\") {\n          info = staticFiles[path] = info();\n        }\n\n        return info;\n      } // If staticFiles contains originalPath with the arch inferred above,\n      // use that information.\n\n\n      if (hasOwn.call(staticFiles, originalPath)) {\n        return finalize(originalPath);\n      } // If getArchAndPath returned an alternate path, try that instead.\n\n\n      if (path !== originalPath && hasOwn.call(staticFiles, path)) {\n        return finalize(path);\n      }\n    });\n    return info;\n  }\n\n  function getArchAndPath(path, browser) {\n    const pathParts = path.split(\"/\");\n    const archKey = pathParts[1];\n\n    if (archKey.startsWith(\"__\")) {\n      const archCleaned = \"web.\" + archKey.slice(2);\n\n      if (hasOwn.call(WebApp.clientPrograms, archCleaned)) {\n        pathParts.splice(1, 1); // Remove the archKey part.\n\n        return {\n          arch: archCleaned,\n          path: pathParts.join(\"/\")\n        };\n      }\n    } // TODO Perhaps one day we could infer Cordova clients here, so that we\n    // wouldn't have to use prefixed \"/__cordova/...\" URLs.\n\n\n    const arch = isModern(browser) ? \"web.browser\" : \"web.browser.legacy\";\n\n    if (hasOwn.call(WebApp.clientPrograms, arch)) {\n      return {\n        arch,\n        path\n      };\n    }\n\n    return {\n      arch: WebApp.defaultArch,\n      path\n    };\n  } // Parse the passed in port value. Return the port as-is if it's a String\n  // (e.g. a Windows Server style named pipe), otherwise return the port as an\n  // integer.\n  //\n  // DEPRECATED: Direct use of this function is not recommended; it is no\n  // longer used internally, and will be removed in a future release.\n\n\n  WebAppInternals.parsePort = port => {\n    let parsedPort = parseInt(port);\n\n    if (Number.isNaN(parsedPort)) {\n      parsedPort = port;\n    }\n\n    return parsedPort;\n  };\n\n  onMessage(\"webapp-pause-client\", (_ref) => Promise.asyncApply(() => {\n    let {\n      arch\n    } = _ref;\n    WebAppInternals.pauseClient(arch);\n  }));\n  onMessage(\"webapp-reload-client\", (_ref2) => Promise.asyncApply(() => {\n    let {\n      arch\n    } = _ref2;\n    WebAppInternals.generateClientProgram(arch);\n  }));\n\n  function runWebAppServer() {\n    var shuttingDown = false;\n    var syncQueue = new Meteor._SynchronousQueue();\n\n    var getItemPathname = function (itemUrl) {\n      return decodeURIComponent(parseUrl(itemUrl).pathname);\n    };\n\n    WebAppInternals.reloadClientPrograms = function () {\n      syncQueue.runTask(function () {\n        const staticFilesByArch = Object.create(null);\n        const {\n          configJson\n        } = __meteor_bootstrap__;\n        const clientArchs = configJson.clientArchs || Object.keys(configJson.clientPaths);\n\n        try {\n          clientArchs.forEach(arch => {\n            generateClientProgram(arch, staticFilesByArch);\n          });\n          WebAppInternals.staticFilesByArch = staticFilesByArch;\n        } catch (e) {\n          Log.error(\"Error reloading the client program: \" + e.stack);\n          process.exit(1);\n        }\n      });\n    }; // Pause any incoming requests and make them wait for the program to be\n    // unpaused the next time generateClientProgram(arch) is called.\n\n\n    WebAppInternals.pauseClient = function (arch) {\n      syncQueue.runTask(() => {\n        const program = WebApp.clientPrograms[arch];\n        const {\n          unpause\n        } = program;\n        program.paused = new Promise(resolve => {\n          if (typeof unpause === \"function\") {\n            // If there happens to be an existing program.unpause function,\n            // compose it with the resolve function.\n            program.unpause = function () {\n              unpause();\n              resolve();\n            };\n          } else {\n            program.unpause = resolve;\n          }\n        });\n      });\n    };\n\n    WebAppInternals.generateClientProgram = function (arch) {\n      syncQueue.runTask(() => generateClientProgram(arch));\n    };\n\n    function generateClientProgram(arch) {\n      let staticFilesByArch = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : WebAppInternals.staticFilesByArch;\n      const clientDir = pathJoin(pathDirname(__meteor_bootstrap__.serverDir), arch); // read the control for the client we'll be serving up\n\n      const programJsonPath = pathJoin(clientDir, \"program.json\");\n      let programJson;\n\n      try {\n        programJson = JSON.parse(readFileSync(programJsonPath));\n      } catch (e) {\n        if (e.code === \"ENOENT\") return;\n        throw e;\n      }\n\n      if (programJson.format !== \"web-program-pre1\") {\n        throw new Error(\"Unsupported format for client assets: \" + JSON.stringify(programJson.format));\n      }\n\n      if (!programJsonPath || !clientDir || !programJson) {\n        throw new Error(\"Client config file not parsed.\");\n      }\n\n      archPath[arch] = clientDir;\n      const staticFiles = staticFilesByArch[arch] = Object.create(null);\n      const {\n        manifest\n      } = programJson;\n      manifest.forEach(item => {\n        if (item.url && item.where === \"client\") {\n          staticFiles[getItemPathname(item.url)] = {\n            absolutePath: pathJoin(clientDir, item.path),\n            cacheable: item.cacheable,\n            hash: item.hash,\n            // Link from source to its map\n            sourceMapUrl: item.sourceMapUrl,\n            type: item.type\n          };\n\n          if (item.sourceMap) {\n            // Serve the source map too, under the specified URL. We assume\n            // all source maps are cacheable.\n            staticFiles[getItemPathname(item.sourceMapUrl)] = {\n              absolutePath: pathJoin(clientDir, item.sourceMap),\n              cacheable: true\n            };\n          }\n        }\n      });\n      const {\n        PUBLIC_SETTINGS\n      } = __meteor_runtime_config__;\n      const configOverrides = {\n        PUBLIC_SETTINGS\n      };\n      const oldProgram = WebApp.clientPrograms[arch];\n      const newProgram = WebApp.clientPrograms[arch] = {\n        format: \"web-program-pre1\",\n        manifest: manifest,\n        // Use arrow functions so that these versions can be lazily\n        // calculated later, and so that they will not be included in the\n        // staticFiles[manifestUrl].content string below.\n        //\n        // Note: these version calculations must be kept in agreement with\n        // CordovaBuilder#appendVersion in tools/cordova/builder.js, or hot\n        // code push will reload Cordova apps unnecessarily.\n        version: () => WebAppHashing.calculateClientHash(manifest, null, configOverrides),\n        versionRefreshable: () => WebAppHashing.calculateClientHash(manifest, type => type === \"css\", configOverrides),\n        versionNonRefreshable: () => WebAppHashing.calculateClientHash(manifest, type => type !== \"css\", configOverrides),\n        cordovaCompatibilityVersions: programJson.cordovaCompatibilityVersions,\n        PUBLIC_SETTINGS\n      }; // Expose program details as a string reachable via the following URL.\n\n      const manifestUrlPrefix = \"/__\" + arch.replace(/^web\\./, \"\");\n      const manifestUrl = manifestUrlPrefix + getItemPathname(\"/manifest.json\");\n\n      staticFiles[manifestUrl] = () => {\n        if (Package.autoupdate) {\n          const {\n            AUTOUPDATE_VERSION = Package.autoupdate.Autoupdate.autoupdateVersion\n          } = process.env;\n\n          if (AUTOUPDATE_VERSION) {\n            newProgram.version = AUTOUPDATE_VERSION;\n          }\n        }\n\n        if (typeof newProgram.version === \"function\") {\n          newProgram.version = newProgram.version();\n        }\n\n        return {\n          content: JSON.stringify(newProgram),\n          cacheable: false,\n          hash: newProgram.version,\n          type: \"json\"\n        };\n      };\n\n      generateBoilerplateForArch(arch); // If there are any requests waiting on oldProgram.paused, let them\n      // continue now (using the new program).\n\n      if (oldProgram && oldProgram.paused) {\n        oldProgram.unpause();\n      }\n    }\n\n    ;\n    const defaultOptionsForArch = {\n      'web.cordova': {\n        runtimeConfigOverrides: {\n          // XXX We use absoluteUrl() here so that we serve https://\n          // URLs to cordova clients if force-ssl is in use. If we were\n          // to use __meteor_runtime_config__.ROOT_URL instead of\n          // absoluteUrl(), then Cordova clients would immediately get a\n          // HCP setting their DDP_DEFAULT_CONNECTION_URL to\n          // http://example.meteor.com. This breaks the app, because\n          // force-ssl doesn't serve CORS headers on 302\n          // redirects. (Plus it's undesirable to have clients\n          // connecting to http://example.meteor.com when force-ssl is\n          // in use.)\n          DDP_DEFAULT_CONNECTION_URL: process.env.MOBILE_DDP_URL || Meteor.absoluteUrl(),\n          ROOT_URL: process.env.MOBILE_ROOT_URL || Meteor.absoluteUrl()\n        }\n      },\n      \"web.browser\": {\n        runtimeConfigOverrides: {\n          isModern: true\n        }\n      },\n      \"web.browser.legacy\": {\n        runtimeConfigOverrides: {\n          isModern: false\n        }\n      }\n    };\n\n    WebAppInternals.generateBoilerplate = function () {\n      // This boilerplate will be served to the mobile devices when used with\n      // Meteor/Cordova for the Hot-Code Push and since the file will be served by\n      // the device's server, it is important to set the DDP url to the actual\n      // Meteor server accepting DDP connections and not the device's file server.\n      syncQueue.runTask(function () {\n        Object.keys(WebApp.clientPrograms).forEach(generateBoilerplateForArch);\n      });\n    };\n\n    function generateBoilerplateForArch(arch) {\n      const program = WebApp.clientPrograms[arch];\n      const additionalOptions = defaultOptionsForArch[arch] || {};\n      const {\n        baseData\n      } = boilerplateByArch[arch] = WebAppInternals.generateBoilerplateInstance(arch, program.manifest, additionalOptions); // We need the runtime config with overrides for meteor_runtime_config.js:\n\n      program.meteorRuntimeConfig = JSON.stringify(_objectSpread({}, __meteor_runtime_config__, {}, additionalOptions.runtimeConfigOverrides || null));\n      program.refreshableAssets = baseData.css.map(file => ({\n        url: bundledJsCssUrlRewriteHook(file.url)\n      }));\n    }\n\n    WebAppInternals.reloadClientPrograms(); // webserver\n\n    var app = connect(); // Packages and apps can add handlers that run before any other Meteor\n    // handlers via WebApp.rawConnectHandlers.\n\n    var rawConnectHandlers = connect();\n    app.use(rawConnectHandlers); // Auto-compress any json, javascript, or text.\n\n    app.use(compress({\n      filter: shouldCompress\n    })); // parse cookies into an object\n\n    app.use(cookieParser()); // We're not a proxy; reject (without crashing) attempts to treat us like\n    // one. (See #1212.)\n\n    app.use(function (req, res, next) {\n      if (RoutePolicy.isValidUrl(req.url)) {\n        next();\n        return;\n      }\n\n      res.writeHead(400);\n      res.write(\"Not a proxy\");\n      res.end();\n    }); // Parse the query string into res.query. Used by oauth_server, but it's\n    // generally pretty handy..\n    //\n    // Do this before the next middleware destroys req.url if a path prefix\n    // is set to close #10111.\n\n    app.use(function (request, response, next) {\n      request.query = qs.parse(parseUrl(request.url).query);\n      next();\n    });\n\n    function getPathParts(path) {\n      const parts = path.split(\"/\");\n\n      while (parts[0] === \"\") parts.shift();\n\n      return parts;\n    }\n\n    function isPrefixOf(prefix, array) {\n      return prefix.length <= array.length && prefix.every((part, i) => part === array[i]);\n    } // Strip off the path prefix, if it exists.\n\n\n    app.use(function (request, response, next) {\n      const pathPrefix = __meteor_runtime_config__.ROOT_URL_PATH_PREFIX;\n      const {\n        pathname\n      } = parseUrl(request.url); // check if the path in the url starts with the path prefix\n\n      if (pathPrefix) {\n        const prefixParts = getPathParts(pathPrefix);\n        const pathParts = getPathParts(pathname);\n\n        if (isPrefixOf(prefixParts, pathParts)) {\n          request.url = \"/\" + pathParts.slice(prefixParts.length).join(\"/\");\n          return next();\n        }\n      }\n\n      if (pathname === \"/favicon.ico\" || pathname === \"/robots.txt\") {\n        return next();\n      }\n\n      if (pathPrefix) {\n        response.writeHead(404);\n        response.write(\"Unknown path\");\n        response.end();\n        return;\n      }\n\n      next();\n    }); // Serve static files from the manifest.\n    // This is inspired by the 'static' middleware.\n\n    app.use(function (req, res, next) {\n      WebAppInternals.staticFilesMiddleware(WebAppInternals.staticFilesByArch, req, res, next);\n    }); // Core Meteor packages like dynamic-import can add handlers before\n    // other handlers added by package and application code.\n\n    app.use(WebAppInternals.meteorInternalHandlers = connect()); // Packages and apps can add handlers to this via WebApp.connectHandlers.\n    // They are inserted before our default handler.\n\n    var packageAndAppHandlers = connect();\n    app.use(packageAndAppHandlers);\n    var suppressConnectErrors = false; // connect knows it is an error handler because it has 4 arguments instead of\n    // 3. go figure.  (It is not smart enough to find such a thing if it's hidden\n    // inside packageAndAppHandlers.)\n\n    app.use(function (err, req, res, next) {\n      if (!err || !suppressConnectErrors || !req.headers['x-suppress-error']) {\n        next(err);\n        return;\n      }\n\n      res.writeHead(err.status, {\n        'Content-Type': 'text/plain'\n      });\n      res.end(\"An error message\");\n    });\n    app.use(function (req, res, next) {\n      return Promise.asyncApply(() => {\n        if (!appUrl(req.url)) {\n          return next();\n        } else {\n          var headers = {\n            'Content-Type': 'text/html; charset=utf-8'\n          };\n\n          if (shuttingDown) {\n            headers['Connection'] = 'Close';\n          }\n\n          var request = WebApp.categorizeRequest(req);\n\n          if (request.url.query && request.url.query['meteor_css_resource']) {\n            // In this case, we're requesting a CSS resource in the meteor-specific\n            // way, but we don't have it.  Serve a static css file that indicates that\n            // we didn't have it, so we can detect that and refresh.  Make sure\n            // that any proxies or CDNs don't cache this error!  (Normally proxies\n            // or CDNs are smart enough not to cache error pages, but in order to\n            // make this hack work, we need to return the CSS file as a 200, which\n            // would otherwise be cached.)\n            headers['Content-Type'] = 'text/css; charset=utf-8';\n            headers['Cache-Control'] = 'no-cache';\n            res.writeHead(200, headers);\n            res.write(\".meteor-css-not-found-error { width: 0px;}\");\n            res.end();\n            return;\n          }\n\n          if (request.url.query && request.url.query['meteor_js_resource']) {\n            // Similarly, we're requesting a JS resource that we don't have.\n            // Serve an uncached 404. (We can't use the same hack we use for CSS,\n            // because actually acting on that hack requires us to have the JS\n            // already!)\n            headers['Cache-Control'] = 'no-cache';\n            res.writeHead(404, headers);\n            res.end(\"404 Not Found\");\n            return;\n          }\n\n          if (request.url.query && request.url.query['meteor_dont_serve_index']) {\n            // When downloading files during a Cordova hot code push, we need\n            // to detect if a file is not available instead of inadvertently\n            // downloading the default index page.\n            // So similar to the situation above, we serve an uncached 404.\n            headers['Cache-Control'] = 'no-cache';\n            res.writeHead(404, headers);\n            res.end(\"404 Not Found\");\n            return;\n          }\n\n          const {\n            arch\n          } = getArchAndPath(parseRequest(req).pathname, request.browser); // If pauseClient(arch) has been called, program.paused will be a\n          // Promise that will be resolved when the program is unpaused.\n\n          Promise.await(WebApp.clientPrograms[arch].paused);\n          return getBoilerplateAsync(request, arch).then((_ref3) => {\n            let {\n              stream,\n              statusCode,\n              headers: newHeaders\n            } = _ref3;\n\n            if (!statusCode) {\n              statusCode = res.statusCode ? res.statusCode : 200;\n            }\n\n            if (newHeaders) {\n              Object.assign(headers, newHeaders);\n            }\n\n            res.writeHead(statusCode, headers);\n            stream.pipe(res, {\n              // End the response when the stream ends.\n              end: true\n            });\n          }).catch(error => {\n            Log.error(\"Error running template: \" + error.stack);\n            res.writeHead(500, headers);\n            res.end();\n          });\n        }\n      });\n    }); // Return 404 by default, if no other handlers serve this URL.\n\n    app.use(function (req, res) {\n      res.writeHead(404);\n      res.end();\n    });\n    var httpServer = createServer(app);\n    var onListeningCallbacks = []; // After 5 seconds w/o data on a socket, kill it.  On the other hand, if\n    // there's an outstanding request, give it a higher timeout instead (to avoid\n    // killing long-polling requests)\n\n    httpServer.setTimeout(SHORT_SOCKET_TIMEOUT); // Do this here, and then also in livedata/stream_server.js, because\n    // stream_server.js kills all the current request handlers when installing its\n    // own.\n\n    httpServer.on('request', WebApp._timeoutAdjustmentRequestCallback); // If the client gave us a bad request, tell it instead of just closing the\n    // socket. This lets load balancers in front of us differentiate between \"a\n    // server is randomly closing sockets for no reason\" and \"client sent a bad\n    // request\".\n    //\n    // This will only work on Node 6; Node 4 destroys the socket before calling\n    // this event. See https://github.com/nodejs/node/pull/4557/ for details.\n\n    httpServer.on('clientError', (err, socket) => {\n      // Pre-Node-6, do nothing.\n      if (socket.destroyed) {\n        return;\n      }\n\n      if (err.message === 'Parse Error') {\n        socket.end('HTTP/1.1 400 Bad Request\\r\\n\\r\\n');\n      } else {\n        // For other errors, use the default behavior as if we had no clientError\n        // handler.\n        socket.destroy(err);\n      }\n    }); // start up app\n\n    _.extend(WebApp, {\n      connectHandlers: packageAndAppHandlers,\n      rawConnectHandlers: rawConnectHandlers,\n      httpServer: httpServer,\n      connectApp: app,\n      // For testing.\n      suppressConnectErrors: function () {\n        suppressConnectErrors = true;\n      },\n      onListening: function (f) {\n        if (onListeningCallbacks) onListeningCallbacks.push(f);else f();\n      },\n      // This can be overridden by users who want to modify how listening works\n      // (eg, to run a proxy like Apollo Engine Proxy in front of the server).\n      startListening: function (httpServer, listenOptions, cb) {\n        httpServer.listen(listenOptions, cb);\n      }\n    }); // Let the rest of the packages (and Meteor.startup hooks) insert connect\n    // middlewares and update __meteor_runtime_config__, then keep going to set up\n    // actually serving HTML.\n\n\n    exports.main = argv => {\n      WebAppInternals.generateBoilerplate();\n\n      const startHttpServer = listenOptions => {\n        WebApp.startListening(httpServer, listenOptions, Meteor.bindEnvironment(() => {\n          if (process.env.METEOR_PRINT_ON_LISTEN) {\n            console.log(\"LISTENING\");\n          }\n\n          const callbacks = onListeningCallbacks;\n          onListeningCallbacks = null;\n          callbacks.forEach(callback => {\n            callback();\n          });\n        }, e => {\n          console.error(\"Error listening:\", e);\n          console.error(e && e.stack);\n        }));\n      };\n\n      let localPort = process.env.PORT || 0;\n      const unixSocketPath = process.env.UNIX_SOCKET_PATH;\n\n      if (unixSocketPath) {\n        // Start the HTTP server using a socket file.\n        removeExistingSocketFile(unixSocketPath);\n        startHttpServer({\n          path: unixSocketPath\n        });\n        registerSocketFileCleanup(unixSocketPath);\n      } else {\n        localPort = isNaN(Number(localPort)) ? localPort : Number(localPort);\n\n        if (/\\\\\\\\?.+\\\\pipe\\\\?.+/.test(localPort)) {\n          // Start the HTTP server using Windows Server style named pipe.\n          startHttpServer({\n            path: localPort\n          });\n        } else if (typeof localPort === \"number\") {\n          // Start the HTTP server using TCP.\n          startHttpServer({\n            port: localPort,\n            host: process.env.BIND_IP || \"0.0.0.0\"\n          });\n        } else {\n          throw new Error(\"Invalid PORT specified\");\n        }\n      }\n\n      return \"DAEMON\";\n    };\n  }\n\n  var inlineScriptsAllowed = true;\n\n  WebAppInternals.inlineScriptsAllowed = function () {\n    return inlineScriptsAllowed;\n  };\n\n  WebAppInternals.setInlineScriptsAllowed = function (value) {\n    inlineScriptsAllowed = value;\n    WebAppInternals.generateBoilerplate();\n  };\n\n  var sriMode;\n\n  WebAppInternals.enableSubresourceIntegrity = function () {\n    let use_credentials = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    sriMode = use_credentials ? 'use-credentials' : 'anonymous';\n    WebAppInternals.generateBoilerplate();\n  };\n\n  WebAppInternals.setBundledJsCssUrlRewriteHook = function (hookFn) {\n    bundledJsCssUrlRewriteHook = hookFn;\n    WebAppInternals.generateBoilerplate();\n  };\n\n  WebAppInternals.setBundledJsCssPrefix = function (prefix) {\n    var self = this;\n    self.setBundledJsCssUrlRewriteHook(function (url) {\n      return prefix + url;\n    });\n  }; // Packages can call `WebAppInternals.addStaticJs` to specify static\n  // JavaScript to be included in the app. This static JS will be inlined,\n  // unless inline scripts have been disabled, in which case it will be\n  // served under `/<sha1 of contents>`.\n\n\n  var additionalStaticJs = {};\n\n  WebAppInternals.addStaticJs = function (contents) {\n    additionalStaticJs[\"/\" + sha1(contents) + \".js\"] = contents;\n  }; // Exported for tests\n\n\n  WebAppInternals.getBoilerplate = getBoilerplate;\n  WebAppInternals.additionalStaticJs = additionalStaticJs; // Start the server!\n\n  runWebAppServer();\n}.call(this, module);","map":{"version":3,"sources":["packages/webapp/webapp_server.js"],"names":["_objectSpread","module1","link","default","v","export","WebApp","WebAppInternals","assert","readFileSync","createServer","pathJoin","pathDirname","join","dirname","parseUrl","parse","createHash","connect","compress","cookieParser","qs","parseRequest","basicAuth","lookupUserAgent","lookup","isModern","send","removeExistingSocketFile","registerSocketFileCleanup","onMessage","SHORT_SOCKET_TIMEOUT","LONG_SOCKET_TIMEOUT","hasOwn","Object","prototype","hasOwnProperty","NpmModules","version","Npm","require","module","defaultArch","clientPrograms","archPath","bundledJsCssUrlRewriteHook","url","bundledPrefix","__meteor_runtime_config__","ROOT_URL_PATH_PREFIX","sha1","contents","hash","update","digest","shouldCompress","req","res","headers","filter","camelCase","name","parts","split","toLowerCase","i","length","charAt","toUpperCase","substr","identifyBrowser","userAgentString","userAgent","family","major","minor","patch","categorizeRequest","_","extend","browser","pick","htmlAttributeHooks","getHtmlAttributes","request","combinedAttributes","each","hook","attributes","Error","addHtmlAttributeHook","push","appUrl","RoutePolicy","classify","Meteor","startup","getter","key","arch","program","value","calculateClientHash","clientHash","calculateClientHashRefreshable","calculateClientHashNonRefreshable","getRefreshableAssets","_timeoutAdjustmentRequestCallback","setTimeout","finishListeners","listeners","removeAllListeners","on","l","boilerplateByArch","boilerplateDataCallbacks","create","registerBoilerplateDataCallback","callback","previousCallback","strictEqual","getBoilerplate","getBoilerplateAsync","await","boilerplate","data","assign","baseData","htmlAttributes","madeChanges","promise","Promise","resolve","keys","forEach","then","result","stream","toHTMLStream","statusCode","generateBoilerplateInstance","manifest","additionalOptions","runtimeConfig","clone","runtimeConfigOverrides","Boilerplate","pathMapper","itemPath","baseDataExtension","additionalStaticJs","map","pathname","meteorRuntimeConfig","JSON","stringify","encodeURIComponent","rootUrlPathPrefix","sriMode","inlineScriptsAllowed","inline","staticFilesMiddleware","staticFilesByArch","next","method","decodeURIComponent","e","serveStaticJs","s","writeHead","write","end","has","path","getArchAndPath","paused","info","getStaticFileInfo","maxAge","cacheable","setHeader","sourceMapUrl","type","content","absolutePath","maxage","dotfiles","lastModified","err","Log","error","pipe","originalPath","call","staticArchList","archIndex","indexOf","unshift","splice","some","staticFiles","finalize","pathParts","archKey","startsWith","archCleaned","slice","parsePort","port","parsedPort","parseInt","Number","isNaN","pauseClient","generateClientProgram","runWebAppServer","shuttingDown","syncQueue","_SynchronousQueue","getItemPathname","itemUrl","reloadClientPrograms","runTask","configJson","__meteor_bootstrap__","clientArchs","clientPaths","stack","process","exit","unpause","clientDir","serverDir","programJsonPath","programJson","code","format","item","where","sourceMap","PUBLIC_SETTINGS","configOverrides","oldProgram","newProgram","WebAppHashing","versionRefreshable","versionNonRefreshable","cordovaCompatibilityVersions","manifestUrlPrefix","replace","manifestUrl","Package","autoupdate","AUTOUPDATE_VERSION","Autoupdate","autoupdateVersion","env","generateBoilerplateForArch","defaultOptionsForArch","DDP_DEFAULT_CONNECTION_URL","MOBILE_DDP_URL","absoluteUrl","ROOT_URL","MOBILE_ROOT_URL","generateBoilerplate","refreshableAssets","css","file","app","rawConnectHandlers","use","isValidUrl","response","query","getPathParts","shift","isPrefixOf","prefix","array","every","part","pathPrefix","prefixParts","meteorInternalHandlers","packageAndAppHandlers","suppressConnectErrors","status","newHeaders","catch","httpServer","onListeningCallbacks","socket","destroyed","message","destroy","connectHandlers","connectApp","onListening","f","startListening","listenOptions","cb","listen","exports","main","argv","startHttpServer","bindEnvironment","METEOR_PRINT_ON_LISTEN","console","log","callbacks","localPort","PORT","unixSocketPath","UNIX_SOCKET_PATH","test","host","BIND_IP","setInlineScriptsAllowed","enableSubresourceIntegrity","use_credentials","setBundledJsCssUrlRewriteHook","hookFn","setBundledJsCssPrefix","self","addStaticJs"],"mappings":"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","sourcesContent":["import assert from \"assert\";\nimport { readFileSync } from \"fs\";\nimport { createServer } from \"http\";\nimport {\n  join as pathJoin,\n  dirname as pathDirname,\n} from \"path\";\nimport { parse as parseUrl } from \"url\";\nimport { createHash } from \"crypto\";\nimport { connect } from \"./connect.js\";\nimport compress from \"compression\";\nimport cookieParser from \"cookie-parser\";\nimport qs from \"qs\";\nimport parseRequest from \"parseurl\";\nimport basicAuth from \"basic-auth-connect\";\nimport { lookup as lookupUserAgent } from \"useragent\";\nimport { isModern } from \"meteor/modern-browsers\";\nimport send from \"send\";\nimport {\n  removeExistingSocketFile,\n  registerSocketFileCleanup,\n} from './socket_file.js';\n\nvar SHORT_SOCKET_TIMEOUT = 5*1000;\nvar LONG_SOCKET_TIMEOUT = 120*1000;\n\nexport const WebApp = {};\nexport const WebAppInternals = {};\n\nconst hasOwn = Object.prototype.hasOwnProperty;\n\n// backwards compat to 2.0 of connect\nconnect.basicAuth = basicAuth;\n\nWebAppInternals.NpmModules = {\n  connect: {\n    version: Npm.require('connect/package.json').version,\n    module: connect,\n  }\n};\n\n// Though we might prefer to use web.browser (modern) as the default\n// architecture, safety requires a more compatible defaultArch.\nWebApp.defaultArch = 'web.browser.legacy';\n\n// XXX maps archs to manifests\nWebApp.clientPrograms = {};\n\n// XXX maps archs to program path on filesystem\nvar archPath = {};\n\nvar bundledJsCssUrlRewriteHook = function (url) {\n  var bundledPrefix =\n     __meteor_runtime_config__.ROOT_URL_PATH_PREFIX || '';\n  return bundledPrefix + url;\n};\n\nvar sha1 = function (contents) {\n  var hash = createHash('sha1');\n  hash.update(contents);\n  return hash.digest('hex');\n};\n\n function shouldCompress(req, res) {\n  if (req.headers['x-no-compression']) {\n    // don't compress responses with this request header\n    return false;\n  }\n\n  // fallback to standard filter function\n  return compress.filter(req, res);\n};\n\n// #BrowserIdentification\n//\n// We have multiple places that want to identify the browser: the\n// unsupported browser page, the appcache package, and, eventually\n// delivering browser polyfills only as needed.\n//\n// To avoid detecting the browser in multiple places ad-hoc, we create a\n// Meteor \"browser\" object. It uses but does not expose the npm\n// useragent module (we could choose a different mechanism to identify\n// the browser in the future if we wanted to).  The browser object\n// contains\n//\n// * `name`: the name of the browser in camel case\n// * `major`, `minor`, `patch`: integers describing the browser version\n//\n// Also here is an early version of a Meteor `request` object, intended\n// to be a high-level description of the request without exposing\n// details of connect's low-level `req`.  Currently it contains:\n//\n// * `browser`: browser identification object described above\n// * `url`: parsed url, including parsed query params\n//\n// As a temporary hack there is a `categorizeRequest` function on WebApp which\n// converts a connect `req` to a Meteor `request`. This can go away once smart\n// packages such as appcache are being passed a `request` object directly when\n// they serve content.\n//\n// This allows `request` to be used uniformly: it is passed to the html\n// attributes hook, and the appcache package can use it when deciding\n// whether to generate a 404 for the manifest.\n//\n// Real routing / server side rendering will probably refactor this\n// heavily.\n\n\n// e.g. \"Mobile Safari\" => \"mobileSafari\"\nvar camelCase = function (name) {\n  var parts = name.split(' ');\n  parts[0] = parts[0].toLowerCase();\n  for (var i = 1;  i < parts.length;  ++i) {\n    parts[i] = parts[i].charAt(0).toUpperCase() + parts[i].substr(1);\n  }\n  return parts.join('');\n};\n\nvar identifyBrowser = function (userAgentString) {\n  var userAgent = lookupUserAgent(userAgentString);\n  return {\n    name: camelCase(userAgent.family),\n    major: +userAgent.major,\n    minor: +userAgent.minor,\n    patch: +userAgent.patch\n  };\n};\n\n// XXX Refactor as part of implementing real routing.\nWebAppInternals.identifyBrowser = identifyBrowser;\n\nWebApp.categorizeRequest = function (req) {\n  return _.extend({\n    browser: identifyBrowser(req.headers['user-agent']),\n    url: parseUrl(req.url, true)\n  }, _.pick(req, 'dynamicHead', 'dynamicBody', 'headers', 'cookies'));\n};\n\n// HTML attribute hooks: functions to be called to determine any attributes to\n// be added to the '<html>' tag. Each function is passed a 'request' object (see\n// #BrowserIdentification) and should return null or object.\nvar htmlAttributeHooks = [];\nvar getHtmlAttributes = function (request) {\n  var combinedAttributes  = {};\n  _.each(htmlAttributeHooks || [], function (hook) {\n    var attributes = hook(request);\n    if (attributes === null)\n      return;\n    if (typeof attributes !== 'object')\n      throw Error(\"HTML attribute hook must return null or object\");\n    _.extend(combinedAttributes, attributes);\n  });\n  return combinedAttributes;\n};\nWebApp.addHtmlAttributeHook = function (hook) {\n  htmlAttributeHooks.push(hook);\n};\n\n// Serve app HTML for this URL?\nvar appUrl = function (url) {\n  if (url === '/favicon.ico' || url === '/robots.txt')\n    return false;\n\n  // NOTE: app.manifest is not a web standard like favicon.ico and\n  // robots.txt. It is a file name we have chosen to use for HTML5\n  // appcache URLs. It is included here to prevent using an appcache\n  // then removing it from poisoning an app permanently. Eventually,\n  // once we have server side routing, this won't be needed as\n  // unknown URLs with return a 404 automatically.\n  if (url === '/app.manifest')\n    return false;\n\n  // Avoid serving app HTML for declared routes such as /sockjs/.\n  if (RoutePolicy.classify(url))\n    return false;\n\n  // we currently return app HTML on all URLs by default\n  return true;\n};\n\n\n// We need to calculate the client hash after all packages have loaded\n// to give them a chance to populate __meteor_runtime_config__.\n//\n// Calculating the hash during startup means that packages can only\n// populate __meteor_runtime_config__ during load, not during startup.\n//\n// Calculating instead it at the beginning of main after all startup\n// hooks had run would allow packages to also populate\n// __meteor_runtime_config__ during startup, but that's too late for\n// autoupdate because it needs to have the client hash at startup to\n// insert the auto update version itself into\n// __meteor_runtime_config__ to get it to the client.\n//\n// An alternative would be to give autoupdate a \"post-start,\n// pre-listen\" hook to allow it to insert the auto update version at\n// the right moment.\n\nMeteor.startup(function () {\n  function getter(key) {\n    return function (arch) {\n      arch = arch || WebApp.defaultArch;\n      const program = WebApp.clientPrograms[arch];\n      const value = program && program[key];\n      // If this is the first time we have calculated this hash,\n      // program[key] will be a thunk (lazy function with no parameters)\n      // that we should call to do the actual computation.\n      return typeof value === \"function\"\n        ? program[key] = value()\n        : value;\n    };\n  }\n\n  WebApp.calculateClientHash = WebApp.clientHash = getter(\"version\");\n  WebApp.calculateClientHashRefreshable = getter(\"versionRefreshable\");\n  WebApp.calculateClientHashNonRefreshable = getter(\"versionNonRefreshable\");\n  WebApp.getRefreshableAssets = getter(\"refreshableAssets\");\n});\n\n\n\n// When we have a request pending, we want the socket timeout to be long, to\n// give ourselves a while to serve it, and to allow sockjs long polls to\n// complete.  On the other hand, we want to close idle sockets relatively\n// quickly, so that we can shut down relatively promptly but cleanly, without\n// cutting off anyone's response.\nWebApp._timeoutAdjustmentRequestCallback = function (req, res) {\n  // this is really just req.socket.setTimeout(LONG_SOCKET_TIMEOUT);\n  req.setTimeout(LONG_SOCKET_TIMEOUT);\n  // Insert our new finish listener to run BEFORE the existing one which removes\n  // the response from the socket.\n  var finishListeners = res.listeners('finish');\n  // XXX Apparently in Node 0.12 this event was called 'prefinish'.\n  // https://github.com/joyent/node/commit/7c9b6070\n  // But it has switched back to 'finish' in Node v4:\n  // https://github.com/nodejs/node/pull/1411\n  res.removeAllListeners('finish');\n  res.on('finish', function () {\n    res.setTimeout(SHORT_SOCKET_TIMEOUT);\n  });\n  _.each(finishListeners, function (l) { res.on('finish', l); });\n};\n\n\n// Will be updated by main before we listen.\n// Map from client arch to boilerplate object.\n// Boilerplate object has:\n//   - func: XXX\n//   - baseData: XXX\nvar boilerplateByArch = {};\n\n// Register a callback function that can selectively modify boilerplate\n// data given arguments (request, data, arch). The key should be a unique\n// identifier, to prevent accumulating duplicate callbacks from the same\n// call site over time. Callbacks will be called in the order they were\n// registered. A callback should return false if it did not make any\n// changes affecting the boilerplate. Passing null deletes the callback.\n// Any previous callback registered for this key will be returned.\nconst boilerplateDataCallbacks = Object.create(null);\nWebAppInternals.registerBoilerplateDataCallback = function (key, callback) {\n  const previousCallback = boilerplateDataCallbacks[key];\n\n  if (typeof callback === \"function\") {\n    boilerplateDataCallbacks[key] = callback;\n  } else {\n    assert.strictEqual(callback, null);\n    delete boilerplateDataCallbacks[key];\n  }\n\n  // Return the previous callback in case the new callback needs to call\n  // it; for example, when the new callback is a wrapper for the old.\n  return previousCallback || null;\n};\n\n// Given a request (as returned from `categorizeRequest`), return the\n// boilerplate HTML to serve for that request.\n//\n// If a previous connect middleware has rendered content for the head or body,\n// returns the boilerplate with that content patched in otherwise\n// memoizes on HTML attributes (used by, eg, appcache) and whether inline\n// scripts are currently allowed.\n// XXX so far this function is always called with arch === 'web.browser'\nfunction getBoilerplate(request, arch) {\n  return getBoilerplateAsync(request, arch).await();\n}\n\nfunction getBoilerplateAsync(request, arch) {\n  const boilerplate = boilerplateByArch[arch];\n  const data = Object.assign({}, boilerplate.baseData, {\n    htmlAttributes: getHtmlAttributes(request),\n  }, _.pick(request, \"dynamicHead\", \"dynamicBody\"));\n\n  let madeChanges = false;\n  let promise = Promise.resolve();\n\n  Object.keys(boilerplateDataCallbacks).forEach(key => {\n    promise = promise.then(() => {\n      const callback = boilerplateDataCallbacks[key];\n      return callback(request, data, arch);\n    }).then(result => {\n      // Callbacks should return false if they did not make any changes.\n      if (result !== false) {\n        madeChanges = true;\n      }\n    });\n  });\n\n  return promise.then(() => ({\n    stream: boilerplate.toHTMLStream(data),\n    statusCode: data.statusCode,\n    headers: data.headers,\n  }));\n}\n\nWebAppInternals.generateBoilerplateInstance = function (arch,\n                                                        manifest,\n                                                        additionalOptions) {\n  additionalOptions = additionalOptions || {};\n\n  var runtimeConfig = _.extend(\n    _.clone(__meteor_runtime_config__),\n    additionalOptions.runtimeConfigOverrides || {}\n  );\n\n  return new Boilerplate(arch, manifest, _.extend({\n    pathMapper(itemPath) {\n      return pathJoin(archPath[arch], itemPath);\n    },\n    baseDataExtension: {\n      additionalStaticJs: _.map(\n        additionalStaticJs || [],\n        function (contents, pathname) {\n          return {\n            pathname: pathname,\n            contents: contents\n          };\n        }\n      ),\n      // Convert to a JSON string, then get rid of most weird characters, then\n      // wrap in double quotes. (The outermost JSON.stringify really ought to\n      // just be \"wrap in double quotes\" but we use it to be safe.) This might\n      // end up inside a <script> tag so we need to be careful to not include\n      // \"</script>\", but normal {{spacebars}} escaping escapes too much! See\n      // https://github.com/meteor/meteor/issues/3730\n      meteorRuntimeConfig: JSON.stringify(\n        encodeURIComponent(JSON.stringify(runtimeConfig))),\n      rootUrlPathPrefix: __meteor_runtime_config__.ROOT_URL_PATH_PREFIX || '',\n      bundledJsCssUrlRewriteHook: bundledJsCssUrlRewriteHook,\n      sriMode: sriMode,\n      inlineScriptsAllowed: WebAppInternals.inlineScriptsAllowed(),\n      inline: additionalOptions.inline\n    }\n  }, additionalOptions));\n};\n\n// A mapping from url path to architecture (e.g. \"web.browser\") to static\n// file information with the following fields:\n// - type: the type of file to be served\n// - cacheable: optionally, whether the file should be cached or not\n// - sourceMapUrl: optionally, the url of the source map\n//\n// Info also contains one of the following:\n// - content: the stringified content that should be served at this path\n// - absolutePath: the absolute path on disk to the file\n\n// Serve static files from the manifest or added with\n// `addStaticJs`. Exported for tests.\nWebAppInternals.staticFilesMiddleware = async function (\n  staticFilesByArch,\n  req,\n  res,\n  next,\n) {\n  if ('GET' != req.method && 'HEAD' != req.method && 'OPTIONS' != req.method) {\n    next();\n    return;\n  }\n  var pathname = parseRequest(req).pathname;\n  try {\n    pathname = decodeURIComponent(pathname);\n  } catch (e) {\n    next();\n    return;\n  }\n\n  var serveStaticJs = function (s) {\n    res.writeHead(200, {\n      'Content-type': 'application/javascript; charset=UTF-8'\n    });\n    res.write(s);\n    res.end();\n  };\n\n  if (_.has(additionalStaticJs, pathname) &&\n              ! WebAppInternals.inlineScriptsAllowed()) {\n    serveStaticJs(additionalStaticJs[pathname]);\n    return;\n  }\n\n  const { arch, path } = getArchAndPath(\n    pathname,\n    identifyBrowser(req.headers[\"user-agent\"]),\n  );\n\n  // If pauseClient(arch) has been called, program.paused will be a\n  // Promise that will be resolved when the program is unpaused.\n  const program = WebApp.clientPrograms[arch];\n  await program.paused;\n\n  if (path === \"/meteor_runtime_config.js\" &&\n      ! WebAppInternals.inlineScriptsAllowed()) {\n    serveStaticJs(`__meteor_runtime_config__ = ${program.meteorRuntimeConfig};`);\n    return;\n  }\n\n  const info = getStaticFileInfo(staticFilesByArch, pathname, path, arch);\n  if (! info) {\n    next();\n    return;\n  }\n\n  // We don't need to call pause because, unlike 'static', once we call into\n  // 'send' and yield to the event loop, we never call another handler with\n  // 'next'.\n\n  // Cacheable files are files that should never change. Typically\n  // named by their hash (eg meteor bundled js and css files).\n  // We cache them ~forever (1yr).\n  const maxAge = info.cacheable\n    ? 1000 * 60 * 60 * 24 * 365\n    : 0;\n\n  if (info.cacheable) {\n    // Since we use req.headers[\"user-agent\"] to determine whether the\n    // client should receive modern or legacy resources, tell the client\n    // to invalidate cached resources when/if its user agent string\n    // changes in the future.\n    res.setHeader(\"Vary\", \"User-Agent\");\n  }\n\n  // Set the X-SourceMap header, which current Chrome, FireFox, and Safari\n  // understand.  (The SourceMap header is slightly more spec-correct but FF\n  // doesn't understand it.)\n  //\n  // You may also need to enable source maps in Chrome: open dev tools, click\n  // the gear in the bottom right corner, and select \"enable source maps\".\n  if (info.sourceMapUrl) {\n    res.setHeader('X-SourceMap',\n                  __meteor_runtime_config__.ROOT_URL_PATH_PREFIX +\n                  info.sourceMapUrl);\n  }\n\n  if (info.type === \"js\" ||\n      info.type === \"dynamic js\") {\n    res.setHeader(\"Content-Type\", \"application/javascript; charset=UTF-8\");\n  } else if (info.type === \"css\") {\n    res.setHeader(\"Content-Type\", \"text/css; charset=UTF-8\");\n  } else if (info.type === \"json\") {\n    res.setHeader(\"Content-Type\", \"application/json; charset=UTF-8\");\n  }\n\n  if (info.hash) {\n    res.setHeader('ETag', '\"' + info.hash + '\"');\n  }\n\n  if (info.content) {\n    res.write(info.content);\n    res.end();\n  } else {\n    send(req, info.absolutePath, {\n      maxage: maxAge,\n      dotfiles: 'allow', // if we specified a dotfile in the manifest, serve it\n      lastModified: false // don't set last-modified based on the file date\n    }).on('error', function (err) {\n      Log.error(\"Error serving static file \" + err);\n      res.writeHead(500);\n      res.end();\n    }).on('directory', function () {\n      Log.error(\"Unexpected directory \" + info.absolutePath);\n      res.writeHead(500);\n      res.end();\n    }).pipe(res);\n  }\n};\n\nfunction getStaticFileInfo(staticFilesByArch, originalPath, path, arch) {\n  if (! hasOwn.call(WebApp.clientPrograms, arch)) {\n    return null;\n  }\n\n  // Get a list of all available static file architectures, with arch\n  // first in the list if it exists.\n  const staticArchList = Object.keys(staticFilesByArch);\n  const archIndex = staticArchList.indexOf(arch);\n  if (archIndex > 0) {\n    staticArchList.unshift(staticArchList.splice(archIndex, 1)[0]);\n  }\n\n  let info = null;\n\n  staticArchList.some(arch => {\n    const staticFiles = staticFilesByArch[arch];\n\n    function finalize(path) {\n      info = staticFiles[path];\n      // Sometimes we register a lazy function instead of actual data in\n      // the staticFiles manifest.\n      if (typeof info === \"function\") {\n        info = staticFiles[path] = info();\n      }\n      return info;\n    }\n\n    // If staticFiles contains originalPath with the arch inferred above,\n    // use that information.\n    if (hasOwn.call(staticFiles, originalPath)) {\n      return finalize(originalPath);\n    }\n\n    // If getArchAndPath returned an alternate path, try that instead.\n    if (path !== originalPath &&\n        hasOwn.call(staticFiles, path)) {\n      return finalize(path);\n    }\n  });\n\n  return info;\n}\n\nfunction getArchAndPath(path, browser) {\n  const pathParts = path.split(\"/\");\n  const archKey = pathParts[1];\n\n  if (archKey.startsWith(\"__\")) {\n    const archCleaned = \"web.\" + archKey.slice(2);\n    if (hasOwn.call(WebApp.clientPrograms, archCleaned)) {\n      pathParts.splice(1, 1); // Remove the archKey part.\n      return {\n        arch: archCleaned,\n        path: pathParts.join(\"/\"),\n      };\n    }\n  }\n\n  // TODO Perhaps one day we could infer Cordova clients here, so that we\n  // wouldn't have to use prefixed \"/__cordova/...\" URLs.\n  const arch = isModern(browser)\n    ? \"web.browser\"\n    : \"web.browser.legacy\";\n\n  if (hasOwn.call(WebApp.clientPrograms, arch)) {\n    return { arch, path };\n  }\n\n  return {\n    arch: WebApp.defaultArch,\n    path,\n  };\n}\n\n// Parse the passed in port value. Return the port as-is if it's a String\n// (e.g. a Windows Server style named pipe), otherwise return the port as an\n// integer.\n//\n// DEPRECATED: Direct use of this function is not recommended; it is no\n// longer used internally, and will be removed in a future release.\nWebAppInternals.parsePort = port => {\n  let parsedPort = parseInt(port);\n  if (Number.isNaN(parsedPort)) {\n    parsedPort = port;\n  }\n  return parsedPort;\n}\n\nimport { onMessage } from \"meteor/inter-process-messaging\";\n\nonMessage(\"webapp-pause-client\", async ({ arch }) => {\n  WebAppInternals.pauseClient(arch);\n});\n\nonMessage(\"webapp-reload-client\", async ({ arch }) => {\n  WebAppInternals.generateClientProgram(arch);\n});\n\nfunction runWebAppServer() {\n  var shuttingDown = false;\n  var syncQueue = new Meteor._SynchronousQueue();\n\n  var getItemPathname = function (itemUrl) {\n    return decodeURIComponent(parseUrl(itemUrl).pathname);\n  };\n\n  WebAppInternals.reloadClientPrograms = function () {\n    syncQueue.runTask(function() {\n      const staticFilesByArch = Object.create(null);\n\n      const { configJson } = __meteor_bootstrap__;\n      const clientArchs = configJson.clientArchs ||\n        Object.keys(configJson.clientPaths);\n\n      try {\n        clientArchs.forEach(arch => {\n          generateClientProgram(arch, staticFilesByArch);\n        });\n        WebAppInternals.staticFilesByArch = staticFilesByArch;\n      } catch (e) {\n        Log.error(\"Error reloading the client program: \" + e.stack);\n        process.exit(1);\n      }\n    });\n  };\n\n  // Pause any incoming requests and make them wait for the program to be\n  // unpaused the next time generateClientProgram(arch) is called.\n  WebAppInternals.pauseClient = function (arch) {\n    syncQueue.runTask(() => {\n      const program = WebApp.clientPrograms[arch];\n      const { unpause } = program;\n      program.paused = new Promise(resolve => {\n        if (typeof unpause === \"function\") {\n          // If there happens to be an existing program.unpause function,\n          // compose it with the resolve function.\n          program.unpause = function () {\n            unpause();\n            resolve();\n          };\n        } else {\n          program.unpause = resolve;\n        }\n      });\n    });\n  };\n\n  WebAppInternals.generateClientProgram = function (arch) {\n    syncQueue.runTask(() => generateClientProgram(arch));\n  };\n\n  function generateClientProgram(\n    arch,\n    staticFilesByArch = WebAppInternals.staticFilesByArch,\n  ) {\n    const clientDir = pathJoin(\n      pathDirname(__meteor_bootstrap__.serverDir),\n      arch,\n    );\n\n    // read the control for the client we'll be serving up\n    const programJsonPath = pathJoin(clientDir, \"program.json\");\n\n    let programJson;\n    try {\n      programJson = JSON.parse(readFileSync(programJsonPath));\n    } catch (e) {\n      if (e.code === \"ENOENT\") return;\n      throw e;\n    }\n\n    if (programJson.format !== \"web-program-pre1\") {\n      throw new Error(\"Unsupported format for client assets: \" +\n                      JSON.stringify(programJson.format));\n    }\n\n    if (! programJsonPath || ! clientDir || ! programJson) {\n      throw new Error(\"Client config file not parsed.\");\n    }\n\n    archPath[arch] = clientDir;\n    const staticFiles = staticFilesByArch[arch] = Object.create(null);\n\n    const { manifest } = programJson;\n    manifest.forEach(item => {\n      if (item.url && item.where === \"client\") {\n        staticFiles[getItemPathname(item.url)] = {\n          absolutePath: pathJoin(clientDir, item.path),\n          cacheable: item.cacheable,\n          hash: item.hash,\n          // Link from source to its map\n          sourceMapUrl: item.sourceMapUrl,\n          type: item.type\n        };\n\n        if (item.sourceMap) {\n          // Serve the source map too, under the specified URL. We assume\n          // all source maps are cacheable.\n          staticFiles[getItemPathname(item.sourceMapUrl)] = {\n            absolutePath: pathJoin(clientDir, item.sourceMap),\n            cacheable: true\n          };\n        }\n      }\n    });\n\n    const { PUBLIC_SETTINGS } = __meteor_runtime_config__;\n    const configOverrides = {\n      PUBLIC_SETTINGS,\n    };\n\n    const oldProgram = WebApp.clientPrograms[arch];\n    const newProgram = WebApp.clientPrograms[arch] = {\n      format: \"web-program-pre1\",\n      manifest: manifest,\n      // Use arrow functions so that these versions can be lazily\n      // calculated later, and so that they will not be included in the\n      // staticFiles[manifestUrl].content string below.\n      //\n      // Note: these version calculations must be kept in agreement with\n      // CordovaBuilder#appendVersion in tools/cordova/builder.js, or hot\n      // code push will reload Cordova apps unnecessarily.\n      version: () => WebAppHashing.calculateClientHash(\n        manifest, null, configOverrides),\n      versionRefreshable: () => WebAppHashing.calculateClientHash(\n        manifest, type => type === \"css\", configOverrides),\n      versionNonRefreshable: () => WebAppHashing.calculateClientHash(\n        manifest, type => type !== \"css\", configOverrides),\n      cordovaCompatibilityVersions: programJson.cordovaCompatibilityVersions,\n      PUBLIC_SETTINGS,\n    };\n\n    // Expose program details as a string reachable via the following URL.\n    const manifestUrlPrefix = \"/__\" + arch.replace(/^web\\./, \"\");\n    const manifestUrl = manifestUrlPrefix + getItemPathname(\"/manifest.json\");\n\n    staticFiles[manifestUrl] = () => {\n      if (Package.autoupdate) {\n        const {\n          AUTOUPDATE_VERSION =\n            Package.autoupdate.Autoupdate.autoupdateVersion\n        } = process.env;\n\n        if (AUTOUPDATE_VERSION) {\n          newProgram.version = AUTOUPDATE_VERSION;\n        }\n      }\n\n      if (typeof newProgram.version === \"function\") {\n        newProgram.version = newProgram.version();\n      }\n\n      return {\n        content: JSON.stringify(newProgram),\n        cacheable: false,\n        hash: newProgram.version,\n        type: \"json\"\n      };\n    };\n\n    generateBoilerplateForArch(arch);\n\n    // If there are any requests waiting on oldProgram.paused, let them\n    // continue now (using the new program).\n    if (oldProgram &&\n        oldProgram.paused) {\n      oldProgram.unpause();\n    }\n  };\n\n  const defaultOptionsForArch = {\n    'web.cordova': {\n      runtimeConfigOverrides: {\n        // XXX We use absoluteUrl() here so that we serve https://\n        // URLs to cordova clients if force-ssl is in use. If we were\n        // to use __meteor_runtime_config__.ROOT_URL instead of\n        // absoluteUrl(), then Cordova clients would immediately get a\n        // HCP setting their DDP_DEFAULT_CONNECTION_URL to\n        // http://example.meteor.com. This breaks the app, because\n        // force-ssl doesn't serve CORS headers on 302\n        // redirects. (Plus it's undesirable to have clients\n        // connecting to http://example.meteor.com when force-ssl is\n        // in use.)\n        DDP_DEFAULT_CONNECTION_URL: process.env.MOBILE_DDP_URL ||\n          Meteor.absoluteUrl(),\n        ROOT_URL: process.env.MOBILE_ROOT_URL ||\n          Meteor.absoluteUrl()\n      }\n    },\n\n    \"web.browser\": {\n      runtimeConfigOverrides: {\n        isModern: true,\n      }\n    },\n\n    \"web.browser.legacy\": {\n      runtimeConfigOverrides: {\n        isModern: false,\n      }\n    },\n  };\n\n  WebAppInternals.generateBoilerplate = function () {\n    // This boilerplate will be served to the mobile devices when used with\n    // Meteor/Cordova for the Hot-Code Push and since the file will be served by\n    // the device's server, it is important to set the DDP url to the actual\n    // Meteor server accepting DDP connections and not the device's file server.\n    syncQueue.runTask(function() {\n      Object.keys(WebApp.clientPrograms)\n        .forEach(generateBoilerplateForArch);\n    });\n  };\n\n  function generateBoilerplateForArch(arch) {\n    const program = WebApp.clientPrograms[arch];\n    const additionalOptions = defaultOptionsForArch[arch] || {};\n    const { baseData } = boilerplateByArch[arch] =\n      WebAppInternals.generateBoilerplateInstance(\n        arch,\n        program.manifest,\n        additionalOptions,\n      );\n    // We need the runtime config with overrides for meteor_runtime_config.js:\n    program.meteorRuntimeConfig = JSON.stringify({\n      ...__meteor_runtime_config__,\n      ...(additionalOptions.runtimeConfigOverrides || null),\n    });\n    program.refreshableAssets = baseData.css.map(file => ({\n      url: bundledJsCssUrlRewriteHook(file.url),\n    }));\n  }\n\n  WebAppInternals.reloadClientPrograms();\n\n  // webserver\n  var app = connect();\n\n  // Packages and apps can add handlers that run before any other Meteor\n  // handlers via WebApp.rawConnectHandlers.\n  var rawConnectHandlers = connect();\n  app.use(rawConnectHandlers);\n\n  // Auto-compress any json, javascript, or text.\n  app.use(compress({filter: shouldCompress}));\n\n  // parse cookies into an object\n  app.use(cookieParser());\n\n  // We're not a proxy; reject (without crashing) attempts to treat us like\n  // one. (See #1212.)\n  app.use(function(req, res, next) {\n    if (RoutePolicy.isValidUrl(req.url)) {\n      next();\n      return;\n    }\n    res.writeHead(400);\n    res.write(\"Not a proxy\");\n    res.end();\n  });\n\n  // Parse the query string into res.query. Used by oauth_server, but it's\n  // generally pretty handy..\n  //\n  // Do this before the next middleware destroys req.url if a path prefix\n  // is set to close #10111.\n  app.use(function (request, response, next) {\n    request.query = qs.parse(parseUrl(request.url).query);\n    next();\n  });\n\n  function getPathParts(path) {\n    const parts = path.split(\"/\");\n    while (parts[0] === \"\") parts.shift();\n    return parts;\n  }\n\n  function isPrefixOf(prefix, array) {\n    return prefix.length <= array.length &&\n      prefix.every((part, i) => part === array[i]);\n  }\n\n  // Strip off the path prefix, if it exists.\n  app.use(function (request, response, next) {\n    const pathPrefix = __meteor_runtime_config__.ROOT_URL_PATH_PREFIX;\n    const { pathname } = parseUrl(request.url);\n\n    // check if the path in the url starts with the path prefix\n    if (pathPrefix) {\n      const prefixParts = getPathParts(pathPrefix);\n      const pathParts = getPathParts(pathname);\n      if (isPrefixOf(prefixParts, pathParts)) {\n        request.url = \"/\" + pathParts.slice(prefixParts.length).join(\"/\");\n        return next();\n      }\n    }\n\n    if (pathname === \"/favicon.ico\" ||\n        pathname === \"/robots.txt\") {\n      return next();\n    }\n\n    if (pathPrefix) {\n      response.writeHead(404);\n      response.write(\"Unknown path\");\n      response.end();\n      return;\n    }\n\n    next();\n  });\n\n  // Serve static files from the manifest.\n  // This is inspired by the 'static' middleware.\n  app.use(function (req, res, next) {\n    WebAppInternals.staticFilesMiddleware(\n      WebAppInternals.staticFilesByArch,\n      req, res, next\n    );\n  });\n\n  // Core Meteor packages like dynamic-import can add handlers before\n  // other handlers added by package and application code.\n  app.use(WebAppInternals.meteorInternalHandlers = connect());\n\n  // Packages and apps can add handlers to this via WebApp.connectHandlers.\n  // They are inserted before our default handler.\n  var packageAndAppHandlers = connect();\n  app.use(packageAndAppHandlers);\n\n  var suppressConnectErrors = false;\n  // connect knows it is an error handler because it has 4 arguments instead of\n  // 3. go figure.  (It is not smart enough to find such a thing if it's hidden\n  // inside packageAndAppHandlers.)\n  app.use(function (err, req, res, next) {\n    if (!err || !suppressConnectErrors || !req.headers['x-suppress-error']) {\n      next(err);\n      return;\n    }\n    res.writeHead(err.status, { 'Content-Type': 'text/plain' });\n    res.end(\"An error message\");\n  });\n\n  app.use(async function (req, res, next) {\n    if (! appUrl(req.url)) {\n      return next();\n\n    } else {\n      var headers = {\n        'Content-Type': 'text/html; charset=utf-8'\n      };\n\n      if (shuttingDown) {\n        headers['Connection'] = 'Close';\n      }\n\n      var request = WebApp.categorizeRequest(req);\n\n      if (request.url.query && request.url.query['meteor_css_resource']) {\n        // In this case, we're requesting a CSS resource in the meteor-specific\n        // way, but we don't have it.  Serve a static css file that indicates that\n        // we didn't have it, so we can detect that and refresh.  Make sure\n        // that any proxies or CDNs don't cache this error!  (Normally proxies\n        // or CDNs are smart enough not to cache error pages, but in order to\n        // make this hack work, we need to return the CSS file as a 200, which\n        // would otherwise be cached.)\n        headers['Content-Type'] = 'text/css; charset=utf-8';\n        headers['Cache-Control'] = 'no-cache';\n        res.writeHead(200, headers);\n        res.write(\".meteor-css-not-found-error { width: 0px;}\");\n        res.end();\n        return;\n      }\n\n      if (request.url.query && request.url.query['meteor_js_resource']) {\n        // Similarly, we're requesting a JS resource that we don't have.\n        // Serve an uncached 404. (We can't use the same hack we use for CSS,\n        // because actually acting on that hack requires us to have the JS\n        // already!)\n        headers['Cache-Control'] = 'no-cache';\n        res.writeHead(404, headers);\n        res.end(\"404 Not Found\");\n        return;\n      }\n\n      if (request.url.query && request.url.query['meteor_dont_serve_index']) {\n        // When downloading files during a Cordova hot code push, we need\n        // to detect if a file is not available instead of inadvertently\n        // downloading the default index page.\n        // So similar to the situation above, we serve an uncached 404.\n        headers['Cache-Control'] = 'no-cache';\n        res.writeHead(404, headers);\n        res.end(\"404 Not Found\");\n        return;\n      }\n\n      const { arch } = getArchAndPath(\n        parseRequest(req).pathname,\n        request.browser,\n      );\n\n      // If pauseClient(arch) has been called, program.paused will be a\n      // Promise that will be resolved when the program is unpaused.\n      await WebApp.clientPrograms[arch].paused;\n\n      return getBoilerplateAsync(request, arch).then(({\n        stream,\n        statusCode,\n        headers: newHeaders,\n      }) => {\n        if (!statusCode) {\n          statusCode = res.statusCode ? res.statusCode : 200;\n        }\n\n        if (newHeaders) {\n          Object.assign(headers, newHeaders);\n        }\n\n        res.writeHead(statusCode, headers);\n\n        stream.pipe(res, {\n          // End the response when the stream ends.\n          end: true,\n        });\n\n      }).catch(error => {\n        Log.error(\"Error running template: \" + error.stack);\n        res.writeHead(500, headers);\n        res.end();\n      });\n    }\n  });\n\n  // Return 404 by default, if no other handlers serve this URL.\n  app.use(function (req, res) {\n    res.writeHead(404);\n    res.end();\n  });\n\n\n  var httpServer = createServer(app);\n  var onListeningCallbacks = [];\n\n  // After 5 seconds w/o data on a socket, kill it.  On the other hand, if\n  // there's an outstanding request, give it a higher timeout instead (to avoid\n  // killing long-polling requests)\n  httpServer.setTimeout(SHORT_SOCKET_TIMEOUT);\n\n  // Do this here, and then also in livedata/stream_server.js, because\n  // stream_server.js kills all the current request handlers when installing its\n  // own.\n  httpServer.on('request', WebApp._timeoutAdjustmentRequestCallback);\n\n  // If the client gave us a bad request, tell it instead of just closing the\n  // socket. This lets load balancers in front of us differentiate between \"a\n  // server is randomly closing sockets for no reason\" and \"client sent a bad\n  // request\".\n  //\n  // This will only work on Node 6; Node 4 destroys the socket before calling\n  // this event. See https://github.com/nodejs/node/pull/4557/ for details.\n  httpServer.on('clientError', (err, socket) => {\n    // Pre-Node-6, do nothing.\n    if (socket.destroyed) {\n      return;\n    }\n\n    if (err.message === 'Parse Error') {\n      socket.end('HTTP/1.1 400 Bad Request\\r\\n\\r\\n');\n    } else {\n      // For other errors, use the default behavior as if we had no clientError\n      // handler.\n      socket.destroy(err);\n    }\n  });\n\n  // start up app\n  _.extend(WebApp, {\n    connectHandlers: packageAndAppHandlers,\n    rawConnectHandlers: rawConnectHandlers,\n    httpServer: httpServer,\n    connectApp: app,\n    // For testing.\n    suppressConnectErrors: function () {\n      suppressConnectErrors = true;\n    },\n    onListening: function (f) {\n      if (onListeningCallbacks)\n        onListeningCallbacks.push(f);\n      else\n        f();\n    },\n    // This can be overridden by users who want to modify how listening works\n    // (eg, to run a proxy like Apollo Engine Proxy in front of the server).\n    startListening: function (httpServer, listenOptions, cb) {\n      httpServer.listen(listenOptions, cb);\n    },\n  });\n\n  // Let the rest of the packages (and Meteor.startup hooks) insert connect\n  // middlewares and update __meteor_runtime_config__, then keep going to set up\n  // actually serving HTML.\n  exports.main = argv => {\n    WebAppInternals.generateBoilerplate();\n\n    const startHttpServer = listenOptions => {\n      WebApp.startListening(httpServer, listenOptions, Meteor.bindEnvironment(() => {\n        if (process.env.METEOR_PRINT_ON_LISTEN) {\n          console.log(\"LISTENING\");\n        }\n        const callbacks = onListeningCallbacks;\n        onListeningCallbacks = null;\n        callbacks.forEach(callback => { callback(); });\n      }, e => {\n        console.error(\"Error listening:\", e);\n        console.error(e && e.stack);\n      }));\n    };\n\n    let localPort = process.env.PORT || 0;\n    const unixSocketPath = process.env.UNIX_SOCKET_PATH;\n\n    if (unixSocketPath) {\n      // Start the HTTP server using a socket file.\n      removeExistingSocketFile(unixSocketPath);\n      startHttpServer({ path: unixSocketPath });\n      registerSocketFileCleanup(unixSocketPath);\n    } else {\n      localPort = isNaN(Number(localPort)) ? localPort : Number(localPort);\n      if (/\\\\\\\\?.+\\\\pipe\\\\?.+/.test(localPort)) {\n        // Start the HTTP server using Windows Server style named pipe.\n        startHttpServer({ path: localPort });\n      } else if (typeof localPort === \"number\") {\n        // Start the HTTP server using TCP.\n        startHttpServer({\n          port: localPort,\n          host: process.env.BIND_IP || \"0.0.0.0\"\n        });\n      } else {\n        throw new Error(\"Invalid PORT specified\");\n      }\n    }\n\n    return \"DAEMON\";\n  };\n}\n\nvar inlineScriptsAllowed = true;\n\nWebAppInternals.inlineScriptsAllowed = function () {\n  return inlineScriptsAllowed;\n};\n\nWebAppInternals.setInlineScriptsAllowed = function (value) {\n  inlineScriptsAllowed = value;\n  WebAppInternals.generateBoilerplate();\n};\n\nvar sriMode;\n\nWebAppInternals.enableSubresourceIntegrity = function(use_credentials = false) {\n  sriMode = use_credentials ? 'use-credentials' : 'anonymous';\n  WebAppInternals.generateBoilerplate();\n};\n\nWebAppInternals.setBundledJsCssUrlRewriteHook = function (hookFn) {\n  bundledJsCssUrlRewriteHook = hookFn;\n  WebAppInternals.generateBoilerplate();\n};\n\nWebAppInternals.setBundledJsCssPrefix = function (prefix) {\n  var self = this;\n  self.setBundledJsCssUrlRewriteHook(\n    function (url) {\n      return prefix + url;\n  });\n};\n\n// Packages can call `WebAppInternals.addStaticJs` to specify static\n// JavaScript to be included in the app. This static JS will be inlined,\n// unless inline scripts have been disabled, in which case it will be\n// served under `/<sha1 of contents>`.\nvar additionalStaticJs = {};\nWebAppInternals.addStaticJs = function (contents) {\n  additionalStaticJs[\"/\" + sha1(contents) + \".js\"] = contents;\n};\n\n// Exported for tests\nWebAppInternals.getBoilerplate = getBoilerplate;\nWebAppInternals.additionalStaticJs = additionalStaticJs;\n\n// Start the server!\nrunWebAppServer();\n"]},"sourceType":"module","hash":"d7c698202703ecb224e96b5f21ed63dc8ac5699a"}
